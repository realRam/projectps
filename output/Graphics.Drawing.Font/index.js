// Generated by purs version 0.11.6
"use strict";
var Control_Alt = require("../Control.Alt");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_Maybe = require("../Data.Maybe");
var Data_Monoid = require("../Data.Monoid");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Prelude = require("../Prelude");
var FontOptions = function (x) {
    return x;
};
var FontFamily = function (x) {
    return x;
};
var Font = (function () {
    function Font(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    Font.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new Font(value0, value1, value2);
            };
        };
    };
    return Font;
})();
var smallCaps = {
    style: Data_Maybe.Nothing.value, 
    variant: new Data_Maybe.Just("small-caps"), 
    weight: Data_Maybe.Nothing.value
};
var serif = "serif";
var semigroupFontOptions = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
        return {
            style: Control_Alt.alt(Data_Maybe.altMaybe)(v.style)(v1.style), 
            variant: Control_Alt.alt(Data_Maybe.altMaybe)(v.variant)(v1.variant), 
            weight: Control_Alt.alt(Data_Maybe.altMaybe)(v.weight)(v1.weight)
        };
    };
});
var sansSerif = "sans-serif";
var optionsString = function (v) {
    return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")([ Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(v.style), Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(v.variant), Data_Foldable.fold(Data_Foldable.foldableMaybe)(Data_Monoid.monoidString)(v.weight) ]);
};
var oblique = {
    style: new Data_Maybe.Just("oblique"), 
    variant: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value
};
var monospace = "monospace";
var monoidFontOptions = new Data_Monoid.Monoid(function () {
    return semigroupFontOptions;
}, {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value
});
var light = {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: new Data_Maybe.Just("lighter")
};
var italic = {
    style: new Data_Maybe.Just("italic"), 
    variant: Data_Maybe.Nothing.value, 
    weight: Data_Maybe.Nothing.value
};
var fontString = function (v) {
    return optionsString(v.value2) + (" " + (Data_Show.show(Data_Show.showInt)(v.value1) + ("px " + v.value0)));
};
var font = Font.create;
var fantasy = "fantasy";
var eqFontOptions = new Data_Eq.Eq(function (v) {
    return function (v1) {
        return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v.style)(v1.style) && (Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v.variant)(v1.variant) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(v.weight)(v1.weight));
    };
});
var eqFontFamily = new Data_Eq.Eq(function (x) {
    return function (y) {
        return x === y;
    };
});
var eqFont = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(eqFontFamily)(x.value0)(y.value0) && x.value1 === y.value1 && Data_Eq.eq(eqFontOptions)(x.value2)(y.value2);
    };
});
var customFont = FontFamily;
var cursive = "cursive";
var bolder = {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: new Data_Maybe.Just("bolder")
};
var bold = {
    style: Data_Maybe.Nothing.value, 
    variant: Data_Maybe.Nothing.value, 
    weight: new Data_Maybe.Just("bold")
};
module.exports = {
    bold: bold, 
    bolder: bolder, 
    cursive: cursive, 
    customFont: customFont, 
    fantasy: fantasy, 
    font: font, 
    fontString: fontString, 
    italic: italic, 
    light: light, 
    monospace: monospace, 
    oblique: oblique, 
    sansSerif: sansSerif, 
    serif: serif, 
    smallCaps: smallCaps, 
    eqFont: eqFont, 
    eqFontFamily: eqFontFamily, 
    eqFontOptions: eqFontOptions, 
    semigroupFontOptions: semigroupFontOptions, 
    monoidFontOptions: monoidFontOptions
};
